// Mocks generated by Mockito 5.2.0 from annotations
// in english_words_trainer/test/features/profile/presentation/bloc/profile_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;
import 'dart:convert' as _i12;
import 'dart:typed_data' as _i13;

import 'package:dartz/dartz.dart' as _i3;
import 'package:english_words_trainer/core/errors/failures.dart' as _i6;
import 'package:english_words_trainer/features/profile/domain/entities/profile_entity.dart'
    as _i7;
import 'package:english_words_trainer/features/profile/domain/repositiroes/profile_repository.dart'
    as _i2;
import 'package:english_words_trainer/features/profile/domain/usecases/create_profile.dart'
    as _i4;
import 'package:english_words_trainer/features/profile/domain/usecases/get_profile.dart'
    as _i8;
import 'package:english_words_trainer/features/profile/domain/usecases/update_profile.dart'
    as _i9;
import 'package:english_words_trainer/features/profile/domain/usecases/upload_avatar.dart'
    as _i10;
import 'package:image_picker/image_picker.dart' as _i11;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeProfileRepository_0 extends _i1.Fake
    implements _i2.ProfileRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

class _FakeDateTime_2 extends _i1.Fake implements DateTime {}

/// A class which mocks [CreateProfile].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateProfile extends _i1.Mock implements _i4.CreateProfile {
  MockCreateProfile() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ProfileRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeProfileRepository_0()) as _i2.ProfileRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.ProfileEntity>> call(
          _i4.CreateProfileParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
          returnValue: Future<_i3.Either<_i6.Failure, _i7.ProfileEntity>>.value(
              _FakeEither_1<_i6.Failure, _i7.ProfileEntity>())) as _i5
          .Future<_i3.Either<_i6.Failure, _i7.ProfileEntity>>);
}

/// A class which mocks [GetProfile].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetProfile extends _i1.Mock implements _i8.GetProfile {
  MockGetProfile() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ProfileRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeProfileRepository_0()) as _i2.ProfileRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.ProfileEntity?>> call(
          _i8.GetProfileParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValue:
                  Future<_i3.Either<_i6.Failure, _i7.ProfileEntity?>>.value(
                      _FakeEither_1<_i6.Failure, _i7.ProfileEntity?>()))
          as _i5.Future<_i3.Either<_i6.Failure, _i7.ProfileEntity?>>);
}

/// A class which mocks [UpdateProfile].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateProfile extends _i1.Mock implements _i9.UpdateProfile {
  MockUpdateProfile() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ProfileRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeProfileRepository_0()) as _i2.ProfileRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.ProfileEntity>> call(
          _i9.UpdateProfileParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
          returnValue: Future<_i3.Either<_i6.Failure, _i7.ProfileEntity>>.value(
              _FakeEither_1<_i6.Failure, _i7.ProfileEntity>())) as _i5
          .Future<_i3.Either<_i6.Failure, _i7.ProfileEntity>>);
}

/// A class which mocks [UploadAvatar].
///
/// See the documentation for Mockito's code generation for more information.
class MockUploadAvatar extends _i1.Mock implements _i10.UploadAvatar {
  MockUploadAvatar() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ProfileRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeProfileRepository_0()) as _i2.ProfileRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> call(
          _i10.UploadAvatarParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValue: Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>()))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);
}

/// A class which mocks [XFile].
///
/// See the documentation for Mockito's code generation for more information.
class MockXFile extends _i1.Mock implements _i11.XFile {
  MockXFile() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get path =>
      (super.noSuchMethod(Invocation.getter(#path), returnValue: '') as String);
  @override
  String get name =>
      (super.noSuchMethod(Invocation.getter(#name), returnValue: '') as String);
  @override
  _i5.Future<void> saveTo(String? path) =>
      (super.noSuchMethod(Invocation.method(#saveTo, [path]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<int> length() =>
      (super.noSuchMethod(Invocation.method(#length, []),
          returnValue: Future<int>.value(0)) as _i5.Future<int>);
  @override
  _i5.Future<String> readAsString(
          {_i12.Encoding? encoding = const _i12.Utf8Codec()}) =>
      (super.noSuchMethod(
          Invocation.method(#readAsString, [], {#encoding: encoding}),
          returnValue: Future<String>.value('')) as _i5.Future<String>);
  @override
  _i5.Future<_i13.Uint8List> readAsBytes() =>
      (super.noSuchMethod(Invocation.method(#readAsBytes, []),
              returnValue: Future<_i13.Uint8List>.value(_i13.Uint8List(0)))
          as _i5.Future<_i13.Uint8List>);
  @override
  _i5.Stream<_i13.Uint8List> openRead([int? start, int? end]) =>
      (super.noSuchMethod(Invocation.method(#openRead, [start, end]),
              returnValue: Stream<_i13.Uint8List>.empty())
          as _i5.Stream<_i13.Uint8List>);
  @override
  _i5.Future<DateTime> lastModified() =>
      (super.noSuchMethod(Invocation.method(#lastModified, []),
              returnValue: Future<DateTime>.value(_FakeDateTime_2()))
          as _i5.Future<DateTime>);
}
