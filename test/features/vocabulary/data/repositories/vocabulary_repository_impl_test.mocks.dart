// Mocks generated by Mockito 5.2.0 from annotations
// in english_words_trainer/test/features/vocabulary/data/repositories/vocabulary_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:english_words_trainer/features/vocabulary/data/datasources/vocabulary_remote_datasource.dart'
    as _i4;
import 'package:english_words_trainer/features/vocabulary/data/models/word_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeWordModel_0 extends _i1.Fake implements _i2.WordModel {}

class _FakeUnit_1 extends _i1.Fake implements _i3.Unit {}

/// A class which mocks [VocabularyRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockVocabularyRemoteDataSource extends _i1.Mock
    implements _i4.VocabularyRemoteDataSource {
  MockVocabularyRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.WordModel> addNewWord(Map<String, dynamic>? word) =>
      (super.noSuchMethod(Invocation.method(#addNewWord, [word]),
              returnValue: Future<_i2.WordModel>.value(_FakeWordModel_0()))
          as _i5.Future<_i2.WordModel>);
  @override
  _i5.Future<_i2.WordModel> updateWord(_i2.WordModel? word) =>
      (super.noSuchMethod(Invocation.method(#updateWord, [word]),
              returnValue: Future<_i2.WordModel>.value(_FakeWordModel_0()))
          as _i5.Future<_i2.WordModel>);
  @override
  _i5.Future<_i3.Unit> deleteWord(int? id) =>
      (super.noSuchMethod(Invocation.method(#deleteWord, [id]),
              returnValue: Future<_i3.Unit>.value(_FakeUnit_1()))
          as _i5.Future<_i3.Unit>);
  @override
  _i5.Future<List<_i2.WordModel>> getListWords(String? id) =>
      (super.noSuchMethod(Invocation.method(#getListWords, [id]),
              returnValue: Future<List<_i2.WordModel>>.value(<_i2.WordModel>[]))
          as _i5.Future<List<_i2.WordModel>>);
}
