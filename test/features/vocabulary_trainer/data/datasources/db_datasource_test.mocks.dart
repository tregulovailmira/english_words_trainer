// Mocks generated by Mockito 5.2.0 from annotations
// in english_words_trainer/test/features/vocabulary_trainer/data/datasources/db_datasource_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i10;

import 'package:functions_client/functions_client.dart' as _i4;
import 'package:gotrue/gotrue.dart' as _i2;
import 'package:gotrue/src/subscription.dart' as _i11;
import 'package:mockito/mockito.dart' as _i1;
import 'package:postgrest/postgrest.dart' as _i7;
import 'package:realtime_client/realtime_client.dart' as _i3;
import 'package:storage_client/storage_client.dart' as _i5;
import 'package:supabase/src/remove_subscription_result.dart' as _i8;
import 'package:supabase/src/supabase.dart' as _i9;
import 'package:supabase/src/supabase_query_builder.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGoTrueClient_0 extends _i1.Fake implements _i2.GoTrueClient {}

class _FakeRealtimeClient_1 extends _i1.Fake implements _i3.RealtimeClient {}

class _FakeFunctionsClient_2 extends _i1.Fake implements _i4.FunctionsClient {}

class _FakeSupabaseStorageClient_3 extends _i1.Fake
    implements _i5.SupabaseStorageClient {}

class _FakeSupabaseQueryBuilder_4 extends _i1.Fake
    implements _i6.SupabaseQueryBuilder {}

class _FakePostgrestFilterBuilder_5 extends _i1.Fake
    implements _i7.PostgrestFilterBuilder {}

class _FakeRemoveSubscriptionResult_6 extends _i1.Fake
    implements _i8.RemoveSubscriptionResult {}

class _FakeGoTrueApi_7 extends _i1.Fake implements _i2.GoTrueApi {}

class _FakeGotrueSessionResponse_8 extends _i1.Fake
    implements _i2.GotrueSessionResponse {}

class _FakeSession_9 extends _i1.Fake implements _i2.Session {}

class _FakeGotrueUserResponse_10 extends _i1.Fake
    implements _i2.GotrueUserResponse {}

class _FakeGotrueResponse_11 extends _i1.Fake implements _i2.GotrueResponse {}

class _FakeGotrueSubscription_12 extends _i1.Fake
    implements _i2.GotrueSubscription {}

/// A class which mocks [SupabaseClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseClient extends _i1.Mock implements _i9.SupabaseClient {
  MockSupabaseClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get supabaseUrl =>
      (super.noSuchMethod(Invocation.getter(#supabaseUrl), returnValue: '')
          as String);
  @override
  String get supabaseKey =>
      (super.noSuchMethod(Invocation.getter(#supabaseKey), returnValue: '')
          as String);
  @override
  String get schema =>
      (super.noSuchMethod(Invocation.getter(#schema), returnValue: '')
          as String);
  @override
  String get restUrl =>
      (super.noSuchMethod(Invocation.getter(#restUrl), returnValue: '')
          as String);
  @override
  String get realtimeUrl =>
      (super.noSuchMethod(Invocation.getter(#realtimeUrl), returnValue: '')
          as String);
  @override
  String get authUrl =>
      (super.noSuchMethod(Invocation.getter(#authUrl), returnValue: '')
          as String);
  @override
  String get storageUrl =>
      (super.noSuchMethod(Invocation.getter(#storageUrl), returnValue: '')
          as String);
  @override
  String get functionsUrl =>
      (super.noSuchMethod(Invocation.getter(#functionsUrl), returnValue: '')
          as String);
  @override
  _i2.GoTrueClient get auth => (super.noSuchMethod(Invocation.getter(#auth),
      returnValue: _FakeGoTrueClient_0()) as _i2.GoTrueClient);
  @override
  set auth(_i2.GoTrueClient? _auth) =>
      super.noSuchMethod(Invocation.setter(#auth, _auth),
          returnValueForMissingStub: null);
  @override
  _i3.RealtimeClient get realtime =>
      (super.noSuchMethod(Invocation.getter(#realtime),
          returnValue: _FakeRealtimeClient_1()) as _i3.RealtimeClient);
  @override
  set realtime(_i3.RealtimeClient? _realtime) =>
      super.noSuchMethod(Invocation.setter(#realtime, _realtime),
          returnValueForMissingStub: null);
  @override
  set changedAccessToken(String? _changedAccessToken) => super.noSuchMethod(
      Invocation.setter(#changedAccessToken, _changedAccessToken),
      returnValueForMissingStub: null);
  @override
  _i4.FunctionsClient get functions =>
      (super.noSuchMethod(Invocation.getter(#functions),
          returnValue: _FakeFunctionsClient_2()) as _i4.FunctionsClient);
  @override
  _i5.SupabaseStorageClient get storage =>
      (super.noSuchMethod(Invocation.getter(#storage),
              returnValue: _FakeSupabaseStorageClient_3())
          as _i5.SupabaseStorageClient);
  @override
  _i6.SupabaseQueryBuilder from(String? table) => (super.noSuchMethod(
      Invocation.method(#from, [table]),
      returnValue: _FakeSupabaseQueryBuilder_4()) as _i6.SupabaseQueryBuilder);
  @override
  _i7.PostgrestFilterBuilder rpc(String? fn, {Map<String, dynamic>? params}) =>
      (super.noSuchMethod(Invocation.method(#rpc, [fn], {#params: params}),
              returnValue: _FakePostgrestFilterBuilder_5())
          as _i7.PostgrestFilterBuilder);
  @override
  _i10.Future<List<_i3.RealtimeSubscription>> removeAllSubscriptions() =>
      (super.noSuchMethod(Invocation.method(#removeAllSubscriptions, []),
              returnValue: Future<List<_i3.RealtimeSubscription>>.value(
                  <_i3.RealtimeSubscription>[]))
          as _i10.Future<List<_i3.RealtimeSubscription>>);
  @override
  _i10.Future<_i8.RemoveSubscriptionResult> removeSubscription(
          _i3.RealtimeSubscription? subscription) =>
      (super.noSuchMethod(
              Invocation.method(#removeSubscription, [subscription]),
              returnValue: Future<_i8.RemoveSubscriptionResult>.value(
                  _FakeRemoveSubscriptionResult_6()))
          as _i10.Future<_i8.RemoveSubscriptionResult>);
  @override
  List<_i3.RealtimeSubscription> getSubscriptions() =>
      (super.noSuchMethod(Invocation.method(#getSubscriptions, []),
              returnValue: <_i3.RealtimeSubscription>[])
          as List<_i3.RealtimeSubscription>);
}

/// A class which mocks [GoTrueClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoTrueClient extends _i1.Mock implements _i2.GoTrueClient {
  MockGoTrueClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GoTrueApi get api => (super.noSuchMethod(Invocation.getter(#api),
      returnValue: _FakeGoTrueApi_7()) as _i2.GoTrueApi);
  @override
  set api(_i2.GoTrueApi? _api) =>
      super.noSuchMethod(Invocation.setter(#api, _api),
          returnValueForMissingStub: null);
  @override
  set currentUser(_i2.User? _currentUser) =>
      super.noSuchMethod(Invocation.setter(#currentUser, _currentUser),
          returnValueForMissingStub: null);
  @override
  set currentSession(_i2.Session? _currentSession) =>
      super.noSuchMethod(Invocation.setter(#currentSession, _currentSession),
          returnValueForMissingStub: null);
  @override
  bool get autoRefreshToken =>
      (super.noSuchMethod(Invocation.getter(#autoRefreshToken),
          returnValue: false) as bool);
  @override
  set autoRefreshToken(bool? _autoRefreshToken) => super.noSuchMethod(
      Invocation.setter(#autoRefreshToken, _autoRefreshToken),
      returnValueForMissingStub: null);
  @override
  Map<String, _i2.Subscription> get stateChangeEmitters =>
      (super.noSuchMethod(Invocation.getter(#stateChangeEmitters),
              returnValue: <String, _i2.Subscription>{})
          as Map<String, _i2.Subscription>);
  @override
  set stateChangeEmitters(
          Map<String, _i2.Subscription>? _stateChangeEmitters) =>
      super.noSuchMethod(
          Invocation.setter(#stateChangeEmitters, _stateChangeEmitters),
          returnValueForMissingStub: null);
  @override
  _i10.Future<_i2.GotrueSessionResponse> signUp(String? email, String? password,
          {_i2.AuthOptions? options, Map<String, dynamic>? userMetadata}) =>
      (super.noSuchMethod(
              Invocation.method(#signUp, [email, password],
                  {#options: options, #userMetadata: userMetadata}),
              returnValue: Future<_i2.GotrueSessionResponse>.value(
                  _FakeGotrueSessionResponse_8()))
          as _i10.Future<_i2.GotrueSessionResponse>);
  @override
  _i10.Future<_i2.GotrueSessionResponse> signUpWithPhone(
          String? phone, String? password,
          {_i2.AuthOptions? options, Map<String, dynamic>? userMetadata}) =>
      (super.noSuchMethod(
              Invocation.method(#signUpWithPhone, [phone, password],
                  {#options: options, #userMetadata: userMetadata}),
              returnValue: Future<_i2.GotrueSessionResponse>.value(
                  _FakeGotrueSessionResponse_8()))
          as _i10.Future<_i2.GotrueSessionResponse>);
  @override
  _i10.Future<_i2.GotrueSessionResponse> signIn(
          {String? email,
          String? phone,
          String? password,
          _i2.Provider? provider,
          _i2.OpenIDConnectCredentials? oidc,
          _i2.AuthOptions? options}) =>
      (super.noSuchMethod(
              Invocation.method(#signIn, [], {
                #email: email,
                #phone: phone,
                #password: password,
                #provider: provider,
                #oidc: oidc,
                #options: options
              }),
              returnValue: Future<_i2.GotrueSessionResponse>.value(
                  _FakeGotrueSessionResponse_8()))
          as _i10.Future<_i2.GotrueSessionResponse>);
  @override
  _i10.Future<_i2.GotrueSessionResponse> verifyOTP(String? phone, String? token,
          {_i2.AuthOptions? options}) =>
      (super.noSuchMethod(
          Invocation.method(#verifyOTP, [phone, token], {#options: options}),
          returnValue: Future<_i2.GotrueSessionResponse>.value(
              _FakeGotrueSessionResponse_8())) as _i10
          .Future<_i2.GotrueSessionResponse>);
  @override
  _i10.Future<_i2.GotrueSessionResponse> refreshSession() =>
      (super.noSuchMethod(Invocation.method(#refreshSession, []),
              returnValue: Future<_i2.GotrueSessionResponse>.value(
                  _FakeGotrueSessionResponse_8()))
          as _i10.Future<_i2.GotrueSessionResponse>);
  @override
  _i10.Future<_i2.GotrueSessionResponse> setSession(String? refreshToken) =>
      (super.noSuchMethod(Invocation.method(#setSession, [refreshToken]),
              returnValue: Future<_i2.GotrueSessionResponse>.value(
                  _FakeGotrueSessionResponse_8()))
          as _i10.Future<_i2.GotrueSessionResponse>);
  @override
  _i2.Session setAuth(String? accessToken) =>
      (super.noSuchMethod(Invocation.method(#setAuth, [accessToken]),
          returnValue: _FakeSession_9()) as _i2.Session);
  @override
  _i10.Future<_i2.GotrueSessionResponse> getSessionFromUrl(Uri? originUrl,
          {bool? storeSession = true}) =>
      (super.noSuchMethod(
          Invocation.method(
              #getSessionFromUrl, [originUrl], {#storeSession: storeSession}),
          returnValue: Future<_i2.GotrueSessionResponse>.value(
              _FakeGotrueSessionResponse_8())) as _i10
          .Future<_i2.GotrueSessionResponse>);
  @override
  _i10.Future<_i2.GotrueUserResponse> update(_i2.UserAttributes? attributes) =>
      (super.noSuchMethod(Invocation.method(#update, [attributes]),
              returnValue: Future<_i2.GotrueUserResponse>.value(
                  _FakeGotrueUserResponse_10()))
          as _i10.Future<_i2.GotrueUserResponse>);
  @override
  _i10.Future<_i2.GotrueResponse> signOut() =>
      (super.noSuchMethod(Invocation.method(#signOut, []),
              returnValue:
                  Future<_i2.GotrueResponse>.value(_FakeGotrueResponse_11()))
          as _i10.Future<_i2.GotrueResponse>);
  @override
  _i2.GotrueSubscription onAuthStateChange(_i11.Callback? callback) =>
      (super.noSuchMethod(Invocation.method(#onAuthStateChange, [callback]),
          returnValue: _FakeGotrueSubscription_12()) as _i2.GotrueSubscription);
  @override
  _i10.Future<_i2.GotrueSessionResponse> recoverSession(String? jsonStr) =>
      (super.noSuchMethod(Invocation.method(#recoverSession, [jsonStr]),
              returnValue: Future<_i2.GotrueSessionResponse>.value(
                  _FakeGotrueSessionResponse_8()))
          as _i10.Future<_i2.GotrueSessionResponse>);
}
